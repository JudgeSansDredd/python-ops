version: "3"
services:
  localstack:
    image: localstack/localstack
    container_name: localstack
    environment:
      - AWS_DEFAULT_REGION=us-east-1
      - EDGE_PORT=4566
      - SERVICES=dynamodb, sts, s3, cloudformation, ssm, iam
    healthcheck:
      test: awslocal dynamodb list-tables || exit -1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      insights:
        ipv4_address: 172.11.0.6
    ports:
      - "4566:4566"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      insights:
        ipv4_address: 172.11.0.2

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    restart: on-failure
    networks:
      insights:
        ipv4_address: 172.11.0.3
networks:
  insights:
    external: true
  #   name: insights
  #   ipam:
  #     config:
  #       - subnet: 172.11.0.0/24
